var e=require("@typescript-eslint/experimental-utils"),t=require("@angular/compiler");const r=e.ESLintUtils.RuleCreator(e=>"https://github.com/angular-eslint/angular-eslint");function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}const o=Object.keys;var a,s,i,l;!function(e){e.Component="Component",e.Directive="Directive",e.Injectable="Injectable",e.NgModule="NgModule",e.Pipe="Pipe"}(a||(a={})),function(e){e.Attribute="Attribute",e.Host="Host",e.Inject="Inject",e.Optional="Optional",e.Self="Self",e.SkipSelf="SkipSelf"}(s||(s={})),function(e){e.HostListener="HostListener"}(i||(i={})),function(e){e.ContentChild="ContentChild",e.ContentChildren="ContentChildren",e.HostBinding="HostBinding",e.Input="Input",e.Output="Output",e.ViewChild="ViewChild",e.ViewChildren="ViewChildren"}(l||(l={}));const c=n({},s,i,l);var p,u;!function(e){e.AfterContentChecked="AfterContentChecked",e.AfterContentInit="AfterContentInit",e.AfterViewChecked="AfterViewChecked",e.AfterViewInit="AfterViewInit",e.DoBootstrap="DoBootstrap",e.DoCheck="DoCheck",e.OnChanges="OnChanges",e.OnDestroy="OnDestroy",e.OnInit="OnInit"}(p||(p={})),function(e){e.ngAfterContentChecked="ngAfterContentChecked",e.ngAfterContentInit="ngAfterContentInit",e.ngAfterViewChecked="ngAfterViewChecked",e.ngAfterViewInit="ngAfterViewInit",e.ngDoBootstrap="ngDoBootstrap",e.ngDoCheck="ngDoCheck",e.ngOnChanges="ngOnChanges",e.ngOnDestroy="ngOnDestroy",e.ngOnInit="ngOnInit"}(u||(u={}));const d="camelCase",m="kebab-case",g=o(a),f=o(c),y=o(p),h=o(u),x=new Map([[a.Component,new Set([u.ngAfterContentChecked,u.ngAfterContentInit,u.ngAfterViewChecked,u.ngAfterViewInit,u.ngOnChanges,u.ngOnDestroy,u.ngOnInit,u.ngDoCheck])],[a.Directive,new Set([u.ngAfterContentChecked,u.ngAfterContentInit,u.ngAfterViewChecked,u.ngAfterViewInit,u.ngOnChanges,u.ngOnDestroy,u.ngOnInit,u.ngDoCheck])],[a.Injectable,new Set([u.ngOnDestroy])],[a.NgModule,new Set([u.ngDoBootstrap])],[a.Pipe,new Set([u.ngOnDestroy])]]),v=new Set(f),b=new Set(g),C=new Map([[a.Component,v],[a.Directive,v],[a.Injectable,new Set([c.Host,c.Inject,c.Optional,c.Self,c.SkipSelf])],[a.NgModule,new Set([c.Host,c.Inject,c.Optional,c.Self,c.SkipSelf])],[a.Pipe,new Set([c.Host,c.Inject,c.Optional,c.Self,c.SkipSelf])]]);function w(e){return"CallExpression"===e.type}function D(e){return"Identifier"===e.type}function I(e){return"MemberExpression"===e.type}function O(e){return"ClassDeclaration"===e.type}function P(e){return"ObjectExpression"===e.type}function k(e){return"ArrayExpression"===e.type}function S(e){return"Property"===e.type}function A(e){return"Literal"===e.type}function j(e){return"TemplateLiteral"===e.type}function M(e){return"ImportDeclaration"===e.type}function E(e){return"ImportSpecifier"===e.type}function $(e){return"Literal"===e.type&&"string"==typeof e.value}function B(e){return"MethodDefinition"===e.type}function T({parent:e},t){for(;e&&"Program"!==e.type;){if(t(e))return e;e=e.parent}return null}function N(e,t){let r=e;for(;r=r.parent;)if("Program"===r.type)return r.body.filter(e=>M(e)&&e.source.value===t);return r}function R(e){return e.slice(-1)[0]}function L(e,t,r,n){const o=N(e,t);if(null==o||!o.length)return n.insertTextAfterRange([0,0],`import { ${r} } from '${t}';\n`);const a=R(o[0].specifiers);return n.insertTextAfter(a,`, ${r}`)}const V=e=>{var t;return O(e)?null==(t=e.id)?void 0:t.name:e.parent?V(e.parent):void 0},q=({decorators:e})=>null==e?void 0:e.map(U).filter(te).find(K),U=e=>{const{expression:t}=e;return D(t)?t.name:w(t)&&D(t.callee)?t.callee.name:void 0},F=e=>{const{expression:t}=e;return I(t)?t.property.name:t.name},H=e=>e.implements||[],z=e=>H(e).map(F),G=e=>z(e).filter(Q),W=new Set(y),Z=new Set(h),Q=e=>W.has(e),J=e=>Z.has(e),K=e=>b.has(e),X=(e,t)=>{const r=((e,t)=>{const r=(e=>{const{expression:t}=e;if(!w(t)||!t.arguments||0===t.arguments.length)return;const r=t.arguments[0];return P(r)&&r.properties?r:void 0})(e);if(!r||!P(r))return;const n=r.properties.find(e=>e.key&&D(e.key)&&e.key.name===t);return n&&S(n)?n:void 0})(e,t);if(r)return r.value},Y=e=>e.body.body.filter(B),_=e=>A(e.key)?e.key.value:e.key.name;function ee(e){return Array.isArray(e)?e:null!=e?[e]:[]}const te=e=>null!=e,re={attribute:e=>0!==e.length,camelCase:e=>/^[a-zA-Z0-9[\]]+$/.test(e),element:e=>null!==e,kebabCase:e=>/^[a-z0-9-]+-[a-z0-9-]+$/.test(e),prefix(e,t){const r=new RegExp(`^\\[?(${e})`);return n=>{if(!e)return!0;if(!r.test(n))return!1;const o=n.replace(r,"");if(t===d)return!o||o[0]===o[0].toUpperCase();if(t===m)return!o||"-"===o[0];throw Error("Invalid selector style!")}}};function ne(e,t){const r=N(e,t);return Boolean(null==r?void 0:r.some(t=>t.specifiers.some(t=>E(t)&&t.imported.name===e.name&&t.local.name===e.name)))}const oe=e=>{const t=e.length;return 1===t?`"${e[0]}"`:`${e.map(e=>`"${e}"`).slice(0,t-1).join(", ")} or "${[...e].pop()}"`},ae=e=>RegExp(`^(${e.join("|")})$`);var se=r({name:"contextual-decorator",meta:{type:"suggestion",docs:{description:"Ensures that classes use contextual decorators in its body",category:"Best Practices",recommended:!1},schema:[],messages:{contextualDecorator:'Decorator out of context for "@{{classDecoratorName}}()"'}},defaultOptions:[],create:e=>({"MethodDefinition[kind=/^(get|set|method)$/], ClassProperty, TSParameterProperty"(t){!function(e,t){var r;if(null==(r=t.decorators)||!r.length)return;const n=T(t,O);if(!n)return;const o=q(n);if(o)for(const r of t.decorators)ie(e,r,o)}(e,t)}})});function ie(e,t,r){const n=U(t);if(!n||!v.has(n))return;const o=C.get(r);null!=o&&o.has(n)||e.report({node:t,messageId:"contextualDecorator",data:{classDecoratorName:r}})}const le='ClassDeclaration > Decorator:matches([expression.callee.name="Component"], [expression.callee.name="Directive"])',ce='ClassDeclaration > Decorator[expression.callee.name="Component"]',pe='ClassDeclaration > Decorator[expression.callee.name="Directive"]',ue='ClassDeclaration > Decorator[expression.callee.name="Pipe"]',de='Decorator[expression.callee.name="Output"]';var me=r({name:"component-class-suffix",meta:{type:"suggestion",docs:{description:'Classes decorated with @Component must have suffix "Component" (or custom) in their name. See more at https://angular.io/styleguide#style-02-03',category:"Best Practices",recommended:"error"},schema:[{type:"object",properties:{suffixes:{type:"array",items:{type:"string"}}},additionalProperties:!1}],messages:{componentClassSuffix:"Component class names should end with one of these suffixes: {{suffixes}} (https://angular.io/styleguide#style-02-03)"}},defaultOptions:[{suffixes:["Component"]}],create:(e,[{suffixes:t}])=>({[ce](r){const n=r.parent,o=V(n);o&&t.some(e=>o.endsWith(e))||e.report({node:n.id?n.id:n,messageId:"componentClassSuffix",data:{suffixes:oe(t)}})}})});const ge=/\r\n|\r|\n/;function fe(e){return j(e)?e.quasis[0].value.raw.trim().split(ge).length:A(e)?e.raw.trim().split(ge).length:0}var ye=r({name:"component-max-inline-declarations",meta:{type:"suggestion",docs:{description:"Enforces a maximum number of lines in inline template, styles and animations. See more at https://angular.io/guide/styleguide#style-05-04",category:"Best Practices",recommended:!1},schema:[{type:"object",properties:{template:{minimum:0,type:"number"},styles:{minimum:0,type:"number"},animations:{minimum:0,type:"number"}},additionalProperties:!1}],messages:{componentMaxInlineDeclarations:"`{{propertyType}}` has too many lines ({{lineCount}}). Maximum allowed is {{max}} (https://angular.io/guide/styleguide#style-05-04)"}},defaultOptions:[{template:3,styles:3,animations:15}],create:(e,[{template:t=3,styles:r=3,animations:n=15}])=>({[`${ce} Property[key.name='template']`]({value:r}){const n=fe(r);n<=t||e.report({node:r,messageId:"componentMaxInlineDeclarations",data:{lineCount:n,max:t,propertyType:"template"}})},[`${ce} Property[key.name='styles']`]({value:t}){if(!k(t))return;const n=t.elements.reduce((e,t)=>e+fe(t),0);n<=r||e.report({node:t,messageId:"componentMaxInlineDeclarations",data:{lineCount:n,max:r,propertyType:"styles"}})},[`${ce} Property[key.name='animations']`]({value:t}){if(!k(t)||0===t.elements.length)return;const r=Math.max(t.loc.end.line-t.loc.start.line-2,1);r<=n||e.report({node:t,messageId:"componentMaxInlineDeclarations",data:{lineCount:r,max:n,propertyType:"animations"}})}})});const he="attribute",xe="element",ve={[he]:"attrs",[xe]:xe},be=(e,t,r)=>{r.report({node:e,messageId:"prefixFailure",data:{prefix:oe(ee(t))}})},Ce=(e,t,r)=>{r.report({node:e,messageId:"styleFailure",data:{style:t}})},we=(e,t,r)=>{r.report({node:e,messageId:"typeFailure",data:{type:t}})},De=(e,t,r)=>{const n=ee(e),o=r,a=n.length>0&&n.every(e=>-1!==[xe,he].indexOf(e)),s=t.length>0,i=-1!==[d,m].indexOf(o);return a&&s&&i},Ie=(e,r,n,o)=>{const a=ee(r||["attrs",xe]).reduce((e,t)=>e.concat(ve[t]),[]),s=o===m?re.kebabCase:re.camelCase;let i=null;if(e&&A(e)?i=t.CssSelector.parse(e.raw):e&&j(e)&&e.quasis[0]&&(i=t.CssSelector.parse(e.quasis[0].value.raw)),!i)return null;const l=((e,t)=>e.reduce((e,r)=>{const n=t.reduce((e,t)=>{const n=r[t];return n?e.concat(n):e},[]);return e.concat(n)},[]))(i,a),c=l.some(e=>n.some(t=>re.prefix(t,o)(e))),p=l.some(e=>s(e));return{hasExpectedPrefix:c,hasExpectedType:l.length>0,hasExpectedStyle:p}};var Oe=r({name:"component-selector",meta:{type:"suggestion",docs:{description:"Component selectors should follow given naming rules. See more at https://angular.io/guide/styleguide#style-02-07, https://angular.io/guide/styleguide#style-05-02\n      and https://angular.io/guide/styleguide#style-05-03.",category:"Best Practices",recommended:!1},schema:[{type:"object",properties:{type:{oneOf:[{type:"string"},{type:"array",items:{enum:[xe,he]}}]},prefix:{oneOf:[{type:"string"},{type:"array"}]},style:{type:"string",enum:[d,m]}},additionalProperties:!1}],messages:{prefixFailure:"The selector should start with one of these prefixes: {{prefix}} (https://angular.io/guide/styleguide#style-02-07)",styleFailure:"The selector should be {{style}} (https://angular.io/guide/styleguide#style-05-02)",typeFailure:"The selector should be used as an {{type}} (https://angular.io/guide/styleguide#style-05-03)"}},defaultOptions:[{type:"",prefix:"",style:""}],create:(e,[{type:t,prefix:r,style:n}])=>({[ce](o){const a=X(o,"selector");if(!a)return;if(!De(t,r,n))return;const s=Ie(a,t,ee(r),n);null!==s&&(s.hasExpectedType?s.hasExpectedStyle?s.hasExpectedPrefix||be(a,r,e):Ce(a,n,e):we(a,t,e))}})}),Pe=r({name:"contextual-lifecycle",meta:{type:"problem",docs:{description:"Ensures that lifecycle methods are used in a correct context",category:"Possible Errors",recommended:"error"},schema:[],messages:{contextualLifecycle:"Angular will not invoke the `{{methodName}}` lifecycle method within `@{{classDecoratorName}}()` classes"}},defaultOptions:[],create(e){function t({parent:t},r){const n=t,o=x.get(r),a=Y(n);for(const t of a){const n=_(t);!J(n)||null!=o&&o.has(n)||e.report({node:t.key,messageId:"contextualLifecycle",data:{classDecoratorName:r,methodName:n}})}}return{[ce](e){t(e,a.Component)},[pe](e){t(e,a.Directive)},'ClassDeclaration > Decorator[expression.callee.name="Injectable"]'(e){t(e,a.Injectable)},'ClassDeclaration > Decorator[expression.callee.name="NgModule"]'(e){t(e,a.NgModule)},[ue](e){t(e,a.Pipe)}}}}),ke=r({name:"directive-class-suffix",meta:{type:"suggestion",docs:{description:'Classes decorated with @Directive must have suffix "Directive" (or custom) in their name. See more at https://angular.io/styleguide#style-02-03',category:"Best Practices",recommended:"error"},schema:[{type:"object",properties:{suffixes:{type:"array",items:{type:"string"}}},additionalProperties:!1}],messages:{directiveClassSuffix:"Directive class names should end with one of these suffixes: {{suffixes}} (https://angular.io/styleguide#style-02-03)"}},defaultOptions:[{suffixes:["Directive"]}],create:(e,[{suffixes:t}])=>({[pe](r){if(!X(r,"selector"))return;const n=r.parent,o=V(n),a=z(n).some(e=>e.endsWith("Validator")),s=t.concat(a?"Validator":[]);var i;o&&s.some(e=>o.endsWith(e))||e.report({node:null!=(i=n.id)?i:n,messageId:"directiveClassSuffix",data:{suffixes:oe(s)}})}})}),Se=r({name:"directive-selector",meta:{type:"suggestion",docs:{description:"Directive selectors should follow given naming rules. See more at https://angular.io/guide/styleguide#style-02-06 and https://angular.io/guide/styleguide#style-02-08.",category:"Best Practices",recommended:!1},schema:[{type:"object",properties:{type:{oneOf:[{type:"string"},{type:"array",items:{enum:[xe,he]}}]},prefix:{oneOf:[{type:"string"},{type:"array"}]},style:{type:"string",enum:[d,m]}},additionalProperties:!1}],messages:{prefixFailure:"The selector should start with one of these prefixes: {{prefix}} (https://angular.io/guide/styleguide#style-02-08)",styleFailure:"The selector should be {{style}} (https://angular.io/guide/styleguide#style-02-06)",typeFailure:"The selector should be used as an {{type}} (https://angular.io/guide/styleguide#style-02-06)"}},defaultOptions:[{type:"",prefix:"",style:""}],create:(e,[{type:t,prefix:r,style:n}])=>({[pe](o){const a=X(o,"selector");if(!a)return;if(!De(t,r,n))return;const s=Ie(a,t,ee(r),n);null!==s&&(s.hasExpectedType?s.hasExpectedStyle?s.hasExpectedPrefix||be(a,r,e):Ce(a,n,e):we(a,t,e))}})}),Ae=r({name:"no-attribute-decorator",meta:{type:"problem",docs:{description:"Disallows usage of @Attribute decorator.",category:"Possible Errors",recommended:!1},schema:[],messages:{noAttributeDecorator:"The usage of @Attribute is considered a bad practice. Use @Input instead"}},defaultOptions:[],create:e=>({'ClassDeclaration MethodDefinition[key.name="constructor"] Decorator[expression.callee.name="Attribute"]'(t){e.report({node:t,messageId:"noAttributeDecorator"})}})});const je=[p.DoCheck,p.OnChanges],Me=[u.ngDoCheck,u.ngOnChanges];var Ee=r({name:"no-conflicting-lifecycle",meta:{type:"suggestion",docs:{description:"Ensures that directives not implement conflicting lifecycle interfaces.",category:"Best Practices",recommended:"error"},schema:[],messages:{noConflictingLifecycleInterface:`Implementing ${p.DoCheck} and ${p.OnChanges} in a class is not recommended`,noConflictingLifecycleMethod:`Declaring ${u.ngDoCheck} and ${u.ngOnChanges} method in a class is not recommended`}},defaultOptions:[],create:e=>({ClassDeclaration(t){(t=>{const r=G(t);if(!je.every(e=>r.includes(e)))return;const n=H(t).filter(e=>D(e.expression)&&Q(e.expression.name));for(const t of n)e.report({node:t,messageId:"noConflictingLifecycleInterface"})})(t),(t=>{const r=(e=>Y(e).map(_).filter(J))(t);if(!Me.every(e=>r.includes(e)))return;const n=Y(t).filter(e=>D(e.key)&&J(e.key.name));for(const t of n)e.report({node:t,messageId:"noConflictingLifecycleMethod"})})(t)}})}),$e=r({name:"no-forward-ref",meta:{type:"suggestion",docs:{description:"Disallows usage of `forwardRef` references for DI",category:"Best Practices",recommended:!1},schema:[],messages:{noForwardRef:"Avoid using `forwardRef`"}},defaultOptions:[],create:e=>({'CallExpression[callee.type="Identifier"][callee.name="forwardRef"]'(t){e.report({node:t,messageId:"noForwardRef"})}})});const Be={allowStatic:!1};var Te=r({name:"no-host-metadata-property",meta:{type:"suggestion",docs:{description:"Disallows usage of the `host` metadata property. See more at https://angular.io/styleguide#style-06-03",category:"Best Practices",recommended:"error"},schema:[{type:"object",properties:{allowStatic:{type:"boolean",default:Be.allowStatic}},additionalProperties:!1}],messages:{noHostMetadataProperty:`Use @${c.HostBinding} or @${c.HostListener} rather than the \`host\` metadata property (https://angular.io/styleguide#style-06-03)`}},defaultOptions:[Be],create:(e,[{allowStatic:t}])=>({[`${le} Property[key.name="host"]`](r){(t&&P(r.value)?r.value.properties.filter(Ne):[r]).forEach(t=>{e.report({node:t,messageId:"noHostMetadataProperty"})})}})});function Ne(e){return S(e)&&!function(e){return!e.computed&&(D(e.key)||A(e.key)&&"string"==typeof e.key.value&&function({0:e}){return e.toLowerCase()!==e.toUpperCase()}(e.key.value))}(e)&&!function(e){return A(e.value)&&""===e.value.value}(e)}var Re=r({name:"no-input-prefix",meta:{type:"suggestion",docs:{description:"Input names should not be prefixed by the configured disallowed prefixes.",category:"Best Practices",recommended:!1},schema:[{type:"object",properties:{prefixes:{type:"array",items:{type:"string"}}},additionalProperties:!1}],messages:{noInputPrefix:"@Inputs should not be prefixed by {{prefixes}}"}},defaultOptions:[{prefixes:[]}],create:(e,[{prefixes:t}])=>({':matches(ClassProperty, MethodDefinition[kind="set"]) > Decorator[expression.callee.name="Input"]'(r){if(!ne(r.expression.callee,"@angular/core"))return;const n=r.parent,o=function(e){if("Identifier"===e.key.type)return e.key.name;if("Literal"===e.key.type)return e.key.raw;throw new Error(`Unexpected "ClassProperty.key.type" provided: ${e.key.type}`)}(n);t.some(e=>e===o||new RegExp(`^${e}[^a-z]`).test(o))&&e.report({node:n,messageId:"noInputPrefix",data:{prefixes:oe(t)}})}})});const Le=new Set(["aria-activedescendant","aria-atomic","aria-autocomplete","aria-busy","aria-checked","aria-controls","aria-current","aria-describedby","aria-disabled","aria-dragged","aria-dropeffect","aria-expanded","aria-flowto","aria-haspopup","aria-hidden","aria-invalid","aria-label","aria-labelledby","aria-level","aria-live","aria-multiline","aria-multiselectable","aria-orientation","aria-owns","aria-posinset","aria-pressed","aria-readonly","aria-relevant","aria-required","aria-selected","aria-setsize","aria-sort","aria-valuemax","aria-valuemin","aria-valuenow","aria-valuetext"]);var Ve=r({name:"no-input-rename",meta:{type:"suggestion",docs:{description:"Disallows renaming directive inputs by providing a string to the decorator.",category:"Best Practices",recommended:"error"},schema:[{type:"object",properties:{allowedNames:{type:"array",items:{type:"string"},description:"A list with allowed input names",uniqueItems:!0}},additionalProperties:!1}],messages:{noInputRename:"@Inputs should not be aliased (https://angular.io/guide/styleguide#style-05-13)"}},defaultOptions:[{allowedNames:[]}],create:(e,[{allowedNames:t=[]}])=>({':matches(ClassProperty, MethodDefinition[kind="set"]) > Decorator[expression.callee.name="Input"]'(r){const n=r.expression;if(!ne(n.callee,"@angular/core"))return;if(0===n.arguments.length)return;let o;const s=r.parent,{decorators:i}=s.parent.parent,l=null==i?void 0:i.find(e=>w(e.expression)&&D(e.expression.callee)&&e.expression.callee.name===a.Directive);if(l){const e=X(l,"selector");e&&A(e)&&e.value&&(o=(e.value.toString()||"").replace(/[[\]\s]/g,"").split(","))}const c=n.arguments[0].value;c&&D(s.key)&&((e,r)=>t.includes(e)||e!==r&&o&&o.some(t=>new RegExp(`^${t}((${r[0].toUpperCase()+r.slice(1)}$)|(?=$))`).test(e))||Le.has(e)&&r===e.replace(/-[a-zA-Z]/g,e=>e[1].toUpperCase()))(c.toString(),s.key.name)||e.report({node:s,messageId:"noInputRename"})}})}),qe=r({name:"no-inputs-metadata-property",meta:{type:"suggestion",docs:{description:"Disallows usage of the `inputs` metadata property. See more at https://angular.io/styleguide#style-05-12.",category:"Best Practices",recommended:"error"},schema:[],messages:{noInputsMetadataProperty:`Use @${c.Input} rather than the \`inputs\` metadata property (https://angular.io/styleguide#style-05-12)`}},defaultOptions:[],create:e=>({[le](t){const r=X(t,"inputs");r&&e.report({node:r.parent,messageId:"noInputsMetadataProperty"})}})}),Ue=r({name:"no-lifecycle-call",meta:{type:"suggestion",docs:{description:"Disallows explicit calls to lifecycle methods",category:"Best Practices",recommended:!1},schema:[],messages:{noLifecycleCall:"Avoid explicit calls to lifecycle methods"}},defaultOptions:[],create:e=>({[`ClassDeclaration MemberExpression[property.name=${ae([...Z])}]`]:t=>{!q(function(e){return T(e,O)}(t))||function(e){return"Super"===e.type}(t.object)&&function(e){const t=T(e,B);return Boolean(t&&function({property:e},{key:t}){return D(e)&&D(t)&&e.name===t.name}(e,t))}(t)||e.report({node:t.parent,messageId:"noLifecycleCall"})}})}),Fe=r({name:"no-output-native",meta:{type:"suggestion",docs:{description:"Disallows naming Outputs as standard DOM event",category:"Best Practices",recommended:"error"},schema:[],messages:{noOutputNative:"Outputs should not be named or aliased as standard DOM event"}},defaultOptions:[],create(e){const t=ae([...ze()]);return{[[`ClassProperty:has(${de}[expression.arguments.0.value=${t}])`,`ClassProperty:has(${de}):has(Identifier[name=${t}])`].join(",")](t){e.report({node:t,messageId:"noOutputNative"})}}}});let He=null;function ze(){return He||(He=new Set(["abort","afterprint","animationend","animationiteration","animationstart","appinstalled","audioprocess","audioend","audiostart","beforeprint","beforeunload","beginEvent","blocked","blur","boundary","cached","canplay","canplaythrough","change","chargingchange","chargingtimechange","checking","click","close","complete","compositionend","compositionstart","compositionupdate","contextmenu","copy","cut","dblclick","devicechange","devicelight","devicemotion","deviceorientation","deviceproximity","dischargingtimechange","DOMAttributeNameChanged","DOMAttrModified","DOMCharacterDataModified","DOMContentLoaded","DOMElementNameChanged","focus","focusin","focusout","DOMNodeInserted","DOMNodeInsertedIntoDocument","DOMNodeRemoved","DOMNodeRemovedFromDocument","DOMSubtreeModified","downloading","drag","dragend","dragenter","dragleave","dragover","dragstart","drop","durationchange","emptied","end","ended","endEvent","error","fullscreenchange","fullscreenerror","gamepadconnected","gamepaddisconnected","gotpointercapture","hashchange","lostpointercapture","input","invalid","keydown","keypress","keyup","languagechange","levelchange","load","loadeddata","loadedmetadata","loadend","loadstart","mark","message","messageerror","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","nomatch","notificationclick","noupdate","obsolete","offline","online","open","orientationchange","pagehide","pageshow","paste","pause","pointercancel","pointerdown","pointerenter","pointerleave","pointerlockchange","pointerlockerror","pointermove","pointerout","pointerover","pointerup","play","playing","popstate","progress","push","pushsubscriptionchange","ratechange","readystatechange","repeatEvent","reset","resize","resourcetimingbufferfull","result","resume","scroll","seeked","seeking","select","selectstart","selectionchange","show","soundend","soundstart","speechend","speechstart","stalled","start","storage","submit","success","suspend","SVGAbort","SVGError","SVGLoad","SVGResize","SVGScroll","SVGUnload","SVGZoom","timeout","timeupdate","touchcancel","touchend","touchmove","touchstart","transitionend","unload","updateready","upgradeneeded","userproximity","voiceschanged","versionchange","visibilitychange","volumechange","waiting","wheel"]))}const Ge=/^on((?![a-z])|(?=$))/;var We=r({name:"no-output-on-prefix",meta:{type:"suggestion",docs:{description:'Ensures that Output bindings, including aliases, are not named "on", nor prefixed with it. See more at https://angular.io/guide/styleguide#style-05-16',category:"Best Practices",recommended:"error"},schema:[],messages:{noOutputOnPrefix:'Output bindings, including aliases, should not be named "on", nor prefixed with it (https://angular.io/guide/styleguide#style-05-16)'}},defaultOptions:[],create:e=>({[[`ClassProperty:has(${de}[expression.arguments.0.value=${Ge}])`,`ClassProperty:has(${de}):has(Identifier[name=${Ge}])`].join(",")](t){e.report({node:t,messageId:"noOutputOnPrefix"})}})}),Ze=r({name:"no-output-rename",meta:{type:"suggestion",docs:{description:"Disallows renaming directive outputs by providing a string to the decorator.",category:"Best Practices",recommended:"error"},schema:[],messages:{noOutputRename:"@Outputs should not be aliased (https://angular.io/guide/styleguide#style-05-13)"}},defaultOptions:[],create:e=>({'ClassProperty > Decorator[expression.callee.name="Output"]'(t){const r=t.expression;if(!ne(r.callee,"@angular/core"))return;if(0===r.arguments.length)return;let n;const o=t.parent,s=o.parent.parent,i=s.decorators&&s.decorators.find(e=>w(e.expression)&&D(e.expression.callee)&&e.expression.callee.name===a.Directive);if(i){const e=X(i,"selector");e&&A(e)&&e.value&&(n=new Set((e.value.toString()||"").replace(/[[\]\s]/g,"").split(",")))}const l=r.arguments[0].value;l&&D(o.key)&&((e,t)=>!(!n||!n.has(e)||e===t))(l.toString(),o.key.name)||e.report({node:o,messageId:"noOutputRename"})}})}),Qe=r({name:"no-outputs-metadata-property",meta:{type:"suggestion",docs:{description:"Disallows usage of the `outputs` metadata property. See more at https://angular.io/styleguide#style-05-12.",category:"Best Practices",recommended:"error"},schema:[],messages:{noOutputsMetadataProperty:`Use @${c.Output} rather than the \`outputs\` metadata property (https://angular.io/styleguide#style-05-12)`}},defaultOptions:[],create:e=>({[le](t){const r=X(t,"outputs");r&&e.report({node:r.parent,messageId:"noOutputsMetadataProperty"})}})}),Je=r({name:"no-pipe-impure",meta:{type:"suggestion",docs:{description:"Disallows the declaration of impure pipes",category:"Best Practices",recommended:!1},schema:[],messages:{noPipeImpure:"Impure pipes should be avoided because they are invoked on each change-detection cycle"}},defaultOptions:[],create:e=>({[`${ue} Property[key.name='pure'][value.value=false]`](t){e.report({node:t,messageId:"noPipeImpure"})}})}),Ke=r({name:"no-queries-metadata-property",meta:{type:"suggestion",docs:{description:"Disallows usage of the `queries` metadata property. See more at https://angular.io/styleguide#style-05-12.",category:"Best Practices",recommended:!1},schema:[],messages:{noQueriesMetadataProperty:`Use @${c.Output} rather than the \`queries\` metadata property (https://angular.io/styleguide#style-05-12)`}},defaultOptions:[],create:e=>({[le](t){const r=X(t,"queries");r&&e.report({node:r.parent,messageId:"noQueriesMetadataProperty"})}})}),Xe=r({name:"no-empty-lifecycle-method",meta:{type:"suggestion",docs:{description:"Disallows declaring empty lifecycle methods",category:"Best Practices",recommended:"error",suggestion:!0},schema:[],messages:{noEmptyLifecycleMethod:"Lifecycle methods should not be empty",suggestRemoveLifecycleMethod:"Remove lifecycle method"}},defaultOptions:[],create(e){const t=e.getSourceCode();return{[`ClassDeclaration > ClassBody > MethodDefinition[key.name=${ae([...Z])}][value.body.body.length=0]`](r){q(r.parent.parent)&&e.report({node:r,messageId:"noEmptyLifecycleMethod",suggest:[{messageId:"suggestRemoveLifecycleMethod",fix:e=>{const n=N(r,"@angular/core"),o=r.key.name.replace(/^ng+/,"");return[e.remove(r)].concat(function(e,t,r,n){const{implements:o}=t;if(!o)return[];const a=o.map(({expression:e})=>e).filter(D).find(({name:e})=>e===r);if(!a)return[];const s=o[0].expression===a;if(s&&o[o.length-1].expression===a&&t.id)return n.removeRange([t.id.range[1],o[0].range[1]]);const i=e.getTokenAfter(a);if(s&&i)return n.removeRange([a.range[0],i.range[1]]);const l=e.getTokenBefore(a);return l?n.removeRange([l.range[0],a.range[1]]):[]}(t,r.parent.parent,o,e),function(e,t,r,n){var o;const{importDeclaration:a,importSpecifier:s}=null!=(o=function(e,t){for(const r of e){const e=r.specifiers.find(e=>E(e)&&e.imported.name===t);if(e)return{importDeclaration:r,importSpecifier:e}}}(t,r))?o:{};if(!a||!s)return[];const i=a.specifiers[0]===s;if(i&&a.specifiers[a.specifiers.length-1]===s)return n.remove(a);const l=e.getTokenAfter(s);if(i&&l)return n.removeRange([s.range[0],l.range[1]]);const c=e.getTokenBefore(s);return c?n.removeRange([c.range[0],s.range[1]]):[]}(t,null!=n?n:[],o,e))}}]})}}}});const Ye="prefer-on-push-component-change-detection";var _e=r({name:Ye,meta:{type:"suggestion",docs:{description:"Enforces component's change detection to ChangeDetectionStrategy.OnPush.",category:"Best Practices",recommended:!1},schema:[],messages:{preferOnPushComponentChangeDetection:"The changeDetection value of a component should be set to ChangeDetectionStrategy.OnPush"}},defaultOptions:[],create:e=>({[ce](t){const r=X(t,"changeDetection");r?D(r.property)&&"OnPush"===r.property.name||e.report({node:r,messageId:"preferOnPushComponentChangeDetection"}):e.report({node:t,messageId:"preferOnPushComponentChangeDetection"})}})}),et=r({name:"prefer-output-readonly",meta:{type:"suggestion",docs:{description:"Prefer to declare `@Output` as readonly since they are not supposed to be reassigned",category:"Best Practices",recommended:!1,suggestion:!0},schema:[],messages:{preferOutputReadonly:"Prefer to declare `@Output` as readonly since they are not supposed to be reassigned",suggestAddReadonlyModifier:"Add readonly modifier"}},defaultOptions:[],create:e=>({'ClassProperty[readonly=undefined] > Decorator[expression.callee.name="Output"]'({parent:{key:t}}){e.report({node:t,messageId:"preferOutputReadonly",suggest:[{messageId:"suggestAddReadonlyModifier",fix:e=>e.insertTextBefore(t,"readonly ")}]})}})});const tt=/^\.\.?\/.+/;var rt=r({name:"relative-url-prefix",meta:{type:"suggestion",docs:{description:"The ./ and ../ prefix is standard syntax for relative URLs; don't depend on Angular's current ability to do without that prefix. See more at https://angular.io/styleguide#style-05-04",category:"Best Practices",recommended:!1},schema:[],messages:{relativeUrlPrefix:"The ./ and ../ prefix is standard syntax for relative URLs. (https://angular.io/styleguide#style-05-04)"}},defaultOptions:[],create:e=>({[`${ce} Property[key.name='templateUrl']`]({value:t}){nt(t)&&e.report({node:t,messageId:"relativeUrlPrefix"})},[`${ce} Property[key.name='styleUrls']`]({value:t}){k(t)&&t.elements.filter(nt).forEach(t=>{e.report({node:t,messageId:"relativeUrlPrefix"})})}})});function nt(e){return!$(e)||!tt.test(e.value)}const ot=["bootstrap","declarations","entryComponents","exports","imports","providers","schemas"];var at=r({name:"sort-ngmodule-metadata-arrays",meta:{type:"suggestion",docs:{description:"Enforces ASC alphabetical order for NgModule metadata arrays for easy visual scanning",category:"Best Practices",recommended:!1},fixable:"code",schema:[],messages:{sortNgmoduleMetadataArrays:"NgModule metadata arrays should be sorted in ASC alphabetical order"}},defaultOptions:[],create:e=>({'ClassDeclaration > Decorator[expression.callee.name="NgModule"]'(t){ot.forEach(r=>{const n=X(t,r);if(!n||!k(n)||n.elements.length<2)return;const o=n.elements.filter(D).map((e,t,r)=>[e,r[t+1]]).find(([e,t])=>t&&1===e.name.localeCompare(t.name));if(!o)return;const[a,s]=o;e.report({messageId:"sortNgmoduleMetadataArrays",node:a,fix:e=>[e.replaceText(a,s.name),e.replaceText(s,a.name)]})})}})}),st=r({name:"use-component-selector",meta:{type:"suggestion",docs:{description:"Component selector must be declared",category:"Best Practices",recommended:!1},schema:[],messages:{useComponentSelector:"The selector of the component is mandatory"}},defaultOptions:[],create:e=>({[ce](t){const r=X(t,"selector");r&&$(r)&&r.value.length||e.report({node:t,messageId:"useComponentSelector"})}})}),it=r({name:"use-component-view-encapsulation",meta:{type:"suggestion",docs:{description:"Disallows using ViewEncapsulation.None",category:"Best Practices",recommended:!1},schema:[],messages:{useComponentViewEncapsulation:"Using ViewEncapsulation.None makes your styles global, which may have an unintended effect"}},defaultOptions:[],create:e=>({[ce](t){const r=X(t,"encapsulation");!r||I(r)&&D(r.property)&&"None"!==r.property.name||e.report({node:r,messageId:"useComponentViewEncapsulation"})}})}),lt=r({name:"use-injectable-provided-in",meta:{type:"suggestion",docs:{description:`"Using the 'providedIn' property makes classes decorated with @${a.Injectable} tree shakeable`,category:"Best Practices",recommended:!1},schema:[],messages:{useInjectableProvidedIn:`Classes decorated with @${a.Injectable} should use the 'providedIn' property`}},defaultOptions:[],create:e=>({'ClassDeclaration > Decorator[expression.callee.name="Injectable"]'(t){X(t,"providedIn")||e.report({node:t,messageId:"useInjectableProvidedIn"})}})}),ct=r({name:"use-lifecycle-interface",meta:{type:"suggestion",docs:{description:"Ensures that classes implement lifecycle interfaces corresponding to the declared lifecycle methods. See more at https://angular.io/styleguide#style-09-01",category:"Best Practices",recommended:"warn"},schema:[],messages:{useLifecycleInterface:"Lifecycle interface '{{interfaceName}}' should be implemented for method '{{methodName}}'. (https://angular.io/styleguide#style-09-01)"}},defaultOptions:[],create:e=>({[`MethodDefinition[key.name=${ae([...Z])}]`]({key:t,parent:r}){const n=r.parent;if(!q(n))return;const o=G(n),a=t.name,s=(e=>e.slice(2))(a);o.includes(p[s])||e.report({node:t,messageId:"useLifecycleInterface",data:{interfaceName:s,methodName:a}})}})}),pt=r({name:"use-pipe-transform-interface",meta:{type:"suggestion",docs:{description:"Ensures that Pipes implement `PipeTransform` interface",category:"Best Practices",recommended:"error"},fixable:"code",schema:[],messages:{usePipeTransformInterface:"Pipes should implement `PipeTransform` interface"}},defaultOptions:[],create:e=>({[ue]({parent:t}){var r;z(t).find(e=>"PipeTransform"===e)||e.report({node:null!=(r=t.id)?r:t,messageId:"usePipeTransformInterface",fix:e=>{const{implementsNodeReplace:r,implementsTextReplace:n}=function({id:e,implements:t},r){const[n,o]=t?[R(t),`, ${r}`]:[e,` implements ${r}`];return{implementsNodeReplace:n,implementsTextReplace:o}}(t,"PipeTransform");return[L(t,"@angular/core","PipeTransform",e),e.insertTextAfter(r,n)]}})}})}),ut=r({name:"pipe-prefix",meta:{type:"suggestion",docs:{description:"Enforce consistent prefix for pipes.",category:"Stylistic Issues",recommended:!1},schema:[{type:"object",properties:{prefixes:{type:"array",items:{type:"string"},minimum:1,uniqueItems:!0}},additionalProperties:!1}],messages:{pipePrefix:"@Pipes should be prefixed by {{prefixes}}"}},defaultOptions:[{prefixes:[]}],create:(e,[{prefixes:t}])=>({[ue](r){const n=X(r,"name");if(!n)return;if(!function(e){return Array.isArray(e)&&e.length>0}(t))return;const o=t.join("|"),a=re.prefix(o,"camelCase");let s;$(n)?s=n.value:j(n)&&n.quasis[0]&&(s=n.quasis[0].value.raw),s&&(a.apply(this,[s])||e.report({node:n,messageId:"pipePrefix",data:{prefixes:oe(t)}}))}})});module.exports={configs:{all:{extends:"./configs/base.json",rules:{"@angular-eslint/component-class-suffix":"error","@angular-eslint/component-max-inline-declarations":"error","@angular-eslint/component-selector":"error","@angular-eslint/contextual-decorator":"error","@angular-eslint/contextual-lifecycle":"error","@angular-eslint/directive-class-suffix":"error","@angular-eslint/directive-selector":"error","@angular-eslint/no-attribute-decorator":"error","@angular-eslint/no-conflicting-lifecycle":"error","@angular-eslint/no-empty-lifecycle-method":"error","@angular-eslint/no-forward-ref":"error","@angular-eslint/no-host-metadata-property":"error","@angular-eslint/no-input-prefix":"error","@angular-eslint/no-input-rename":"error","@angular-eslint/no-inputs-metadata-property":"error","@angular-eslint/no-lifecycle-call":"error","@angular-eslint/no-output-native":"error","@angular-eslint/no-output-on-prefix":"error","@angular-eslint/no-output-rename":"error","@angular-eslint/no-outputs-metadata-property":"error","@angular-eslint/no-pipe-impure":"error","@angular-eslint/no-queries-metadata-property":"error","@angular-eslint/pipe-prefix":"error","@angular-eslint/prefer-on-push-component-change-detection":"error","@angular-eslint/prefer-output-readonly":"error","@angular-eslint/relative-url-prefix":"error","@angular-eslint/sort-ngmodule-metadata-arrays":"error","@angular-eslint/use-component-selector":"error","@angular-eslint/use-component-view-encapsulation":"error","@angular-eslint/use-injectable-provided-in":"error","@angular-eslint/use-lifecycle-interface":"error","@angular-eslint/use-pipe-transform-interface":"error"}},base:{parser:"@typescript-eslint/parser",parserOptions:{ecmaVersion:2020,sourceType:"module",project:"./tsconfig.json"},plugins:["@typescript-eslint","@angular-eslint"]},recommended:{extends:"./configs/base.json",rules:{"@angular-eslint/component-class-suffix":"error","@angular-eslint/contextual-lifecycle":"error","@angular-eslint/directive-class-suffix":"error","@angular-eslint/no-conflicting-lifecycle":"error","@angular-eslint/no-empty-lifecycle-method":"error","@angular-eslint/no-host-metadata-property":"error","@angular-eslint/no-input-rename":"error","@angular-eslint/no-inputs-metadata-property":"error","@angular-eslint/no-output-native":"error","@angular-eslint/no-output-on-prefix":"error","@angular-eslint/no-output-rename":"error","@angular-eslint/no-outputs-metadata-property":"error","@angular-eslint/use-lifecycle-interface":"warn","@angular-eslint/use-pipe-transform-interface":"error"}},"recommended--extra":{extends:"./configs/base.json",rules:{"no-restricted-imports":["error",{paths:[{name:"rxjs/Rx",message:"Please import directly from 'rxjs' instead"}]}],"@typescript-eslint/member-ordering":["error",{default:["static-field","instance-field","static-method","instance-method"]}],"no-restricted-syntax":["error",{selector:'CallExpression[callee.object.name="console"][callee.property.name=/^(debug|info|time|timeEnd|trace)$/]',message:"Unexpected property on console object was called"}],"@typescript-eslint/no-inferrable-types":["error",{ignoreParameters:!0}],"@typescript-eslint/no-non-null-assertion":"error","no-fallthrough":"error"}},"ng-cli-compat":{extends:["./configs/base.json"],env:{browser:!0,es6:!0,node:!0},plugins:["eslint-plugin-import","eslint-plugin-jsdoc","eslint-plugin-prefer-arrow"],rules:{"@typescript-eslint/interface-name-prefix":"off","@typescript-eslint/explicit-member-accessibility":"off","sort-keys":"off","@angular-eslint/component-class-suffix":"error","@angular-eslint/component-selector":["error",{type:"element",prefix:"app",style:"kebab-case"}],"@angular-eslint/contextual-lifecycle":"error","@angular-eslint/directive-class-suffix":"error","@angular-eslint/directive-selector":["error",{type:"attribute",prefix:"app",style:"camelCase"}],"@angular-eslint/no-conflicting-lifecycle":"error","@angular-eslint/no-host-metadata-property":"error","@angular-eslint/no-input-rename":"error","@angular-eslint/no-inputs-metadata-property":"error","@angular-eslint/no-output-native":"error","@angular-eslint/no-output-on-prefix":"error","@angular-eslint/no-output-rename":"error","@angular-eslint/no-outputs-metadata-property":"error","@angular-eslint/use-lifecycle-interface":"error","@angular-eslint/use-pipe-transform-interface":"error","@typescript-eslint/adjacent-overload-signatures":"error","@typescript-eslint/array-type":"off","@typescript-eslint/ban-types":["error",{types:{Object:{message:"Avoid using the `Object` type. Did you mean `object`?"},Function:{message:"Avoid using the `Function` type. Prefer a specific function type, like `() => void`."},Boolean:{message:"Avoid using the `Boolean` type. Did you mean `boolean`?"},Number:{message:"Avoid using the `Number` type. Did you mean `number`?"},String:{message:"Avoid using the `String` type. Did you mean `string`?"},Symbol:{message:"Avoid using the `Symbol` type. Did you mean `symbol`?"}}}],"@typescript-eslint/consistent-type-assertions":"error","@typescript-eslint/dot-notation":"error","@typescript-eslint/member-ordering":"error","@typescript-eslint/naming-convention":"error","@typescript-eslint/no-empty-function":"off","@typescript-eslint/no-empty-interface":"error","@typescript-eslint/no-explicit-any":"off","@typescript-eslint/no-inferrable-types":["error",{ignoreParameters:!0}],"@typescript-eslint/no-misused-new":"error","@typescript-eslint/no-namespace":"error","@typescript-eslint/no-non-null-assertion":"error","@typescript-eslint/no-parameter-properties":"off","@typescript-eslint/no-unused-expressions":"error","@typescript-eslint/no-use-before-define":"off","@typescript-eslint/no-var-requires":"off","@typescript-eslint/prefer-for-of":"error","@typescript-eslint/prefer-function-type":"error","@typescript-eslint/prefer-namespace-keyword":"error","@typescript-eslint/triple-slash-reference":["error",{path:"always",types:"prefer-import",lib:"always"}],"@typescript-eslint/unified-signatures":"error",complexity:"off","constructor-super":"error",eqeqeq:["error","smart"],"guard-for-in":"error","id-blacklist":["error","any","Number","number","String","string","Boolean","boolean","Undefined","undefined"],"id-match":"error","import/no-deprecated":"warn","jsdoc/newline-after-description":"error","jsdoc/no-types":"error","max-classes-per-file":"off","no-bitwise":"error","no-caller":"error","no-cond-assign":"error","no-console":["error",{allow:["log","warn","dir","timeLog","assert","clear","count","countReset","group","groupEnd","table","dirxml","error","groupCollapsed","Console","profile","profileEnd","timeStamp","context"]}],"no-debugger":"error","no-empty":"off","no-eval":"error","no-fallthrough":"error","no-invalid-this":"off","no-new-wrappers":"error","no-restricted-imports":["error",{name:"rxjs/Rx",message:"Please import directly from 'rxjs' instead"}],"@typescript-eslint/no-shadow":["error",{hoist:"all"}],"no-throw-literal":"error","no-undef-init":"error","no-underscore-dangle":"error","no-unsafe-finally":"error","no-unused-labels":"error","no-var":"error","object-shorthand":"error","one-var":["error","never"],"prefer-arrow/prefer-arrow-functions":"error","prefer-const":"error",radix:"error","use-isnan":"error","valid-typeof":"off"}},"ng-cli-compat--formatting-add-on":{plugins:["eslint-plugin-jsdoc"],rules:{"arrow-body-style":"error","arrow-parens":"off","comma-dangle":"off",curly:"error","eol-last":"error","jsdoc/check-alignment":"error","max-len":["error",{code:140}],"new-parens":"error","no-multiple-empty-lines":"off","no-trailing-spaces":"error","quote-props":["error","as-needed"],"space-before-function-paren":["error",{anonymous:"never",asyncArrow:"always",named:"never"}],"@typescript-eslint/member-delimiter-style":["error",{multiline:{delimiter:"semi",requireLast:!0},singleline:{delimiter:"semi",requireLast:!1}}],quotes:"off","@typescript-eslint/quotes":["error","single",{allowTemplateLiterals:!0}],"@typescript-eslint/semi":["error","always"],"@typescript-eslint/type-annotation-spacing":"error"}}},rules:{"contextual-decorator":se,"component-class-suffix":me,"component-max-inline-declarations":ye,"component-selector":Oe,"contextual-lifecycle":Pe,"directive-class-suffix":ke,"directive-selector":Se,"no-attribute-decorator":Ae,"no-conflicting-lifecycle":Ee,"no-forward-ref":$e,"no-host-metadata-property":Te,"no-input-prefix":Re,"no-input-rename":Ve,"no-inputs-metadata-property":qe,"no-lifecycle-call":Ue,"no-output-native":Fe,"no-output-on-prefix":We,"no-output-rename":Ze,"no-outputs-metadata-property":Qe,"no-pipe-impure":Je,"no-queries-metadata-property":Ke,"no-empty-lifecycle-method":Xe,[Ye]:_e,"prefer-output-readonly":et,"relative-url-prefix":rt,"sort-ngmodule-metadata-arrays":at,"use-component-selector":st,"use-component-view-encapsulation":it,"use-injectable-provided-in":lt,"use-lifecycle-interface":ct,"use-pipe-transform-interface":pt,"pipe-prefix":ut}};
